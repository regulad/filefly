# https://stackoverflow.com/questions/53835198/integrating-python-poetry-with-docker/54763270#54763270
# Copyright (c) 2023  Parker Wahle - Licensed under MIT License (do whatever you want)

FROM python:3.11.4-alpine3.18 AS base

# In Python, the line between a compile-time and run-time dependency is blurry,
# so we play it safe by installing everything
RUN apk add -U tzdata --no-cache \
    && apk add gcc musl-dev libffi-dev openssl-dev make git curl --no-cache \
    && pip install --upgrade pip

# --------------------------------------
# ---------- Copy and compile ----------
# We use a multi-stage build to reduce the size of the final image
FROM base AS builder

# Configure env variables for build/install
ENV PYTHONFAULTHANDLER=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONHASHSEED=random
ENV PIP_NO_CACHE_DIR=off
ENV PIP_DISABLE_PIP_VERSION_CHECK=on
ENV PIP_DEFAULT_TIMEOUT=120
ENV POETRY_VERSION=1.8.3

# Install system deps
RUN pip install "poetry==$POETRY_VERSION"

# Copy only requirements to cache them in docker layer
WORKDIR /code
# Copy the entire monorepo content
COPY . /code

# Install with poetry
# Don't bother creating a virtual env -- significant performance increase
WORKDIR /code/apps/consoomer
RUN poetry config virtualenvs.create false \
  && poetry install --no-interaction --no-ansi --only main

# Build the package
RUN poetry build

# --------------------------------------
# ---------- Install & run! ------------
FROM base AS runner

# Set labels
LABEL name="consoomer"
LABEL version="0.1.0"
LABEL vendor="Parker Wahle"
LABEL org.opencontainers.image.title="consoomer"
LABEL org.opencontainers.image.version="0.1.0"
LABEL org.opencontainers.image.url="https://github.com/regulad/filefly"
LABEL org.opencontainers.image.documentation="https://github.com/regulad/filefly"

ENV PYTHONFAULTHANDLER=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONHASHSEED=random
ENV TZ=America/New_York

ARG USERNAME=consoomer
ARG USER_UID=1008
ARG USER_GID=$USER_UID

RUN addgroup -g $USER_GID -S $USERNAME \
    && adduser -u $USER_UID -G $USERNAME -D -S $USERNAME

# Switch to non-root user (for security)
USER $USERNAME

# Install the package in the user space
COPY --from=builder /code/apps/consoomer/dist/consoomer-*.whl /tmp/
RUN pip install --user /tmp/consoomer-*.whl

# Set the working directory to the consoomer project
WORKDIR /home/$USERNAME/app

# Add the local bin directory to PATH
ENV PATH="/home/$USERNAME/.local/bin:$PATH"

# Run the consoomer
CMD ["python", "-m", "consoomer"]
