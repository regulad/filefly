// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator javascript {
  provider = "prisma-client-js"
}

generator python {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Task related models and enums

enum TaskStatus {
  PENDING
  FINISHED
}

enum TaskType {
  VECTORIZE
}

model TrackedTask {
  id                    String     @id @unique @default(cuid())
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  taskCompleted         DateTime?
  taskWebhookSecretHash String
  status                TaskStatus
  type                  TaskType
  taskError             Json?
  taskPayload           Json?
  taskResult            Json?
}

// OAuth related models and enums

enum ProviderType {
  DROPBOX
  GOOGLE_DRIVE
  MICROSOFT_ONEDRIVE
}

model User {
  id String @id @unique // the cognito entity id

  providerAccounts ProviderAccount[]
}

model ProviderAccount {
  id      String       @id @unique @default(cuid())
  owner   User         @relation(fields: [ownerId], references: [id])
  ownerId String
  type    ProviderType

  accessTokenEncrypted             String
  accessTokenInitializationVector  String
  refreshTokenEncrypted            String
  refreshTokenInitializationVector String

  // these are fields determined from the accessToken
  accountId             String    @unique
  accessTokenExpiresAt  DateTime
  refreshTokenExpiresAt DateTime?
  scopes                String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([ownerId, type, accountId])
}
